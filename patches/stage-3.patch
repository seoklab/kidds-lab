From df507223a3c44fac40087059f9523c7951a70745 Mon Sep 17 00:00:00 2001
From: Nuri Jung <jnooree@snu.ac.kr>
Date: Fri, 27 Jun 2025 11:46:40 +0900
Subject: [PATCH] stage-3

---
 src/main.py | 25 ++++++++++++++++++++++---
 1 file changed, 22 insertions(+), 3 deletions(-)

diff --git a/src/main.py b/src/main.py
index 0ad9b4f..1e44705 100644
--- a/src/main.py
+++ b/src/main.py
@@ -1,5 +1,7 @@
 import sys
+from collections import Counter
 from pathlib import Path
+from pprint import pprint
 
 import numpy as np
 
@@ -8,32 +10,49 @@ import pdbline
 
 def read_pdb(pdb: Path):
     models: list[np.ndarray] = []
+    res_cnts: list[Counter[str]] = []
 
     with open(pdb) as f:
         model: list[np.ndarray] = []
+        rescnt: Counter[str] = Counter()
+        residues_seen: set[tuple[str, int, str]] = set()
 
         for line in f:
             record = pdbline.record(line)
             if record == "MODEL":
                 if model:
                     models.append(np.stack(model))
+                    res_cnts.append(rescnt)
                 model = []
+                rescnt = Counter()
+                residues_seen = set()
             elif record == "ATOM" or record == "HETATM":
+                resid = (
+                    pdbline.chain_id(line),
+                    pdbline.res_seq(line),
+                    pdbline.ins_code(line),
+                )
+                if resid not in residues_seen:
+                    rescnt[pdbline.res_name(line)] += 1
+                    residues_seen.add(resid)
+
                 if pdbline.res_seq(line) % 5 == 0:
                     model.append(pdbline.coordinates(line))
 
         if model:
             models.append(np.stack(model))
+            res_cnts.append(rescnt)
 
-    return models
+    return models, res_cnts
 
 
 def main():
     pdb_file = Path(sys.argv[1])
-    models = read_pdb(pdb_file)
-    for model, coords in enumerate(models):
+    models, res_cnts = read_pdb(pdb_file)
+    for model, (coords, res_cnt) in enumerate(zip(models, res_cnts)):
         com = np.mean(coords, axis=0)
         print(f"{model = }: {com = }")
+        pprint(res_cnt, sort_dicts=False)
 
 
 if __name__ == "__main__":
-- 
2.50.0

