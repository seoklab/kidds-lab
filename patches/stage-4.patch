From bf61606dc7d64747a701780348617a982fd24c93 Mon Sep 17 00:00:00 2001
From: Nuri Jung <jnooree@snu.ac.kr>
Date: Fri, 27 Jun 2025 11:54:37 +0900
Subject: [PATCH] stage-4

---
 src/main.py | 39 +++++++++++++++++++++++++++++++--------
 1 file changed, 31 insertions(+), 8 deletions(-)

diff --git a/src/main.py b/src/main.py
index 1e44705..f854ea6 100644
--- a/src/main.py
+++ b/src/main.py
@@ -13,17 +13,26 @@ def read_pdb(pdb: Path):
     res_cnts: list[Counter[str]] = []
 
     with open(pdb) as f:
-        model: list[np.ndarray] = []
+        atom_coords: dict[
+            tuple[str, int, str, str], tuple[np.ndarray, float]
+        ] = {}
         rescnt: Counter[str] = Counter()
         residues_seen: set[tuple[str, int, str]] = set()
 
         for line in f:
             record = pdbline.record(line)
             if record == "MODEL":
-                if model:
-                    models.append(np.stack(model))
+                if atom_coords:
+                    models.append(
+                        np.stack(
+                            [
+                                coord_occupancy[0]
+                                for coord_occupancy in atom_coords.values()
+                            ]
+                        )
+                    )
                     res_cnts.append(rescnt)
-                model = []
+                atom_coords = {}
                 rescnt = Counter()
                 residues_seen = set()
             elif record == "ATOM" or record == "HETATM":
@@ -36,11 +45,25 @@ def read_pdb(pdb: Path):
                     rescnt[pdbline.res_name(line)] += 1
                     residues_seen.add(resid)
 
-                if pdbline.res_seq(line) % 5 == 0:
-                    model.append(pdbline.coordinates(line))
+                res_seq = pdbline.res_seq(line)
 
-        if model:
-            models.append(np.stack(model))
+                if res_seq % 5 == 0:
+                    atom_name = pdbline.atom_name(line)
+                    atom_id = resid + (atom_name,)
+
+                    atom_coord = pdbline.coordinates(line)
+                    atom_occupancy = pdbline.occupancy(line)
+                    if atom_id not in atom_coords:
+                        atom_coords[atom_id] = (atom_coord, atom_occupancy)
+                    else:
+                        prev_coord_occupancy = atom_coords[atom_id]
+                        if atom_occupancy > prev_coord_occupancy[1]:
+                            atom_coords[atom_id] = (atom_coord, atom_occupancy)
+
+        if atom_coords:
+            models.append(
+                np.stack([coord for coord, _ in atom_coords.values()])
+            )
             res_cnts.append(rescnt)
 
     return models, res_cnts
-- 
2.50.0

